if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
github_url <- "https://raw.githubusercontent.com/charleyferrari/CUNY_DATA608/master/lecture1/Data/inc5000_data.csv"
inc5000 <- read.csv(url(github_url))
names(inc5000)
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
github_url <- "https://raw.githubusercontent.com/charleyferrari/CUNY_DATA608/master/lecture1/Data/inc5000_data.csv"
inc5000 <- read.csv(url(github_url))
names(inc5000)
table(inc5000$Name, inc5000$State)
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
github_url <- "https://raw.githubusercontent.com/charleyferrari/CUNY_DATA608/master/lecture1/Data/inc5000_data.csv"
inc5000 <- read.csv(url(github_url))
names(inc5000)
unique(inc5000$Name)
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
github_url <- "https://raw.githubusercontent.com/charleyferrari/CUNY_DATA608/master/lecture1/Data/inc5000_data.csv"
inc5000 <- read.csv(url(github_url))
names(inc5000)
count(inc5000$Name)
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
github_url <- "https://raw.githubusercontent.com/charleyferrari/CUNY_DATA608/master/lecture1/Data/inc5000_data.csv"
inc5000 <- read.csv(url(github_url))
names(inc5000)
unique(inc5000$Name)
ggplot(inc5000, aes(State)) +
geom_histogram()
pwd()
pwd
dir()
ls()
data("mtcars")
mtcars
data("iris")
iris
names(nycPluto)
install.packages(c("backports", "chron", "curl", "data.table", "dplyr", "glmnet", "lava", "PKI", "purrr", "Rcpp", "rJava", "RWeka", "RWekajars", "tau", "tidyr", "tidyselect"))
install.packages("ggmap")
install.packages(c("data.table", "fAsianOptions", "fBasics", "fOptions", "geosphere", "glue", "lazyeval", "openssl", "rJava", "rlang", "rmarkdown", "RWeka", "RWekajars", "stringi", "tidyselect", "timeDate", "timeSeries", "tm"))
install.packages("plotly")
exit()
exit
quit()
load("~/Desktop/CUNYSPS/IS608/Final_Project/.RData")
View(x)
shiny::runApp('Desktop/CUNYSPS/IS608/Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
shiny::runApp('Desktop/CUNYSPS/IS608/Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
runApp('Desktop/CUNYSPS/IS608/Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
runApp('Desktop/CUNYSPS/IS608/Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
library(data.table)
NYPD <- fread(../NYPD_data.csv)
setwd("~/Desktop/CUNYSPS/IS608/Final_Project")
library(data.table)
NYPD <- fread(../NYPD_data.csv)
library(data.table)
NYPD <- fread("../NYPD_data.csv")
setwd(..)
setwd("..")
getwd()
NYPD <- fread(../NYPD_data.csv)
runApp('Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
runApp('Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
runApp('Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
names(NYPD)
head(NYPD)
head(NYPD, n = 1000)
?checkboxInput
runApp('Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
runApp('Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
runApp('Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
runApp('Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
names(NYPD)
with(NYPD,plot(year,rf_furt))
with(NYPD,plot(year,sb_outln))
with(NYPD,plot(year,sb_other))
runApp('Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
runApp('Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
nrow(complete.cases(NYPD))
complete.cases(NYPD)
nrow(!complete.cases(NYPD))
!complete.cases(NYPD)
NYPD %>% na.omit()
na.omit(NYPD)
runApp('Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
runApp('Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
head(NYPD)
runApp('Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
runApp('Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
runApp('Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
str(NYPD)
unique(NYPD$xcoord)
unique(NYPD$city)
unique(NYPD$state)
unique(NYPD$timestop)
unique(NYPD$date)
names(NYPD)
runApp('Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
install.packages(c("curl", "reshape2", "yaml"))
install.packages("tabplot")
runApp('Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
x <- NYPD %>% filter(sb_admis == "Y")
x
unique(NYPD$datestop)
runApp('Final_Project/Examing_NYPD_Stop_and_Frisk_Data_from_2003_to_2016')
unique(NYPD$datestop)
x<- NYPD$datestop
typeof(x)
x <- as.Date.dates(x)
x <- as.Date(x)
x <- as.Date(x,"%m%dd%YYYY")
x
x<- NYPD$datestop
x
x <- as.Date(x,"%m%d%Y")
x
x <- as.Date(x,"%mm%dd%YYYY")
x
x <- as.Date(x,format = "%m%d%Y")
x
unique(x)
unique(NYPD$datestop)
x <- as.Date(x,format = "%m%d%Y")
x
x <- as.Date(x,format = "%D")
x
getOption("max.print")
options(max.print = 99999)
x
unique(x)
head(NYPD$datestop)
unique(NYPD$datestop)
